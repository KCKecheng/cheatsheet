apiVersion: v1
kind: ConfigMap
metadata:
  name: telegraf-config0001
data:
  telegraf.conf : |
    [agent]
      round_interval = true
      metric_batch_size = 1000
      metric_buffer_limit = 10000
      collection_jitter = "0s"
      flush_interval = "10s"
      flush_jitter = "0s"
      precision = ""

      ## Log at debug level.
      # debug = false
      ## Log only error level messages.
      # quiet = false

      ## Override default hostname, if empty use os.Hostname()
      hostname = ""
      ## If set to true, do no set the "host" tag in the telegraf agent.
      omit_hostname = false


    ###############################################################################
    #                            OUTPUT PLUGINS                                   #
    ###############################################################################
    [[outputs.prometheus_client]]
      listen = ":9273"
      metric_version = 2

    [[inputs.vsphere]]
      interval = "30s"

      vcenters = [ "https://192.168.10.101/sdk" ]
      username = "administrator@vsphere.local"
      password = "password"

      ## VMs
      ## Typical VM metrics (if omitted or empty, all metrics are collected)
      # vm_include = [ "/*/vm/**"] # Inventory path to VMs to collect (by default all are collected)
      # vm_exclude = [] # Inventory paths to exclude
      vm_metric_include = [
        "cpu.usage.average",
        "cpu.latency.average",
        "cpu.readiness.average",
        "cpu.wait.summation",
        "mem.usage.average",
        "mem.swapinRate.average",
        "mem.swapoutRate.average",
        "net.bytesRx.average",
        "net.bytesTx.average",
        "net.droppedRx.summation",
        "net.droppedTx.summation",
        "net.packetsRx.summation",
        "net.packetsTx.summation",
        "virtualDisk.readOIO.latest",
        "virtualDisk.writeOIO.latest",
        "virtualDisk.read.average",
        "virtualDisk.write.average",
        "virtualDisk.numberReadAveraged.average",
        "virtualDisk.numberWriteAveraged.average",
        "virtualDisk.totalReadLatency.average",
        "virtualDisk.totalWriteLatency.average",
        "disk.read.average",
        "disk.write.average",
        "disk.commandsAveraged.average",
        "disk.commandsAborted.summation",
        "disk.numberReadAveraged.average",
        "disk.numberWriteAveraged.average",
        "disk.maxTotalLatency.latest",
        "datastore.read.average",
        "datastore.write.average",
        "datastore.totalReadLatency.average",
        "datastore.totalWriteLatency.average",
        "datastore.numberReadAveraged.average",
        "datastore.numberWriteAveraged.average",
        "sys.uptime.latest"
      ]
      # vm_metric_exclude = [] ## Nothing is excluded by default
      # vm_instances = true ## true by default

      ## Hosts
      ## Typical host metrics (if omitted or empty, all metrics are collected)
      # host_include = [ "/*/host/**"] # Inventory path to hosts to collect (by default all are collected)
      # host_exclude [] # Inventory paths to exclude
      host_metric_include = [
        "cpu.utilization.average",
        "cpu.usage.average",
        "cpu.latency.average",
        "cpu.readiness.average",
        "cpu.wait.summation",
        "mem.usage.average",
        "mem.swapinRate.average",
        "mem.swapoutRate.average",
        "net.bytesRx.average",
        "net.bytesTx.average",
        "net.packetsRx.summation",
        "net.packetsTx.summation",
        "net.droppedRx.summation",
        "net.droppedTx.summation",
        "net.errorsRx.summation",
        "net.errorsTx.summation",
        "disk.read.average",
        "disk.write.average",
        "disk.numberReadAveraged.average",
        "disk.numberWriteAveraged.average",
        "disk.totalReadLatency.average",
        "disk.totalWriteLatency.average",
        "disk.commandsAveraged.average",
        "disk.commandsAborted.summation",
        "disk.maxTotalLatency.latest",
        "storageAdapter.read.average",
        "storageAdapter.write.average",
        "storageAdapter.numberReadAveraged.average",
        "storageAdapter.numberWriteAveraged.average",
        "storageAdapter.totalReadLatency.average",
        "storageAdapter.totalWriteLatency.average",
        "storageAdapter.queued.average",
        "datastore.commandsAborted.summation",
        "datastore.read.average",
        "datastore.write.average",
        "datastore.totalReadLatency.average",
        "datastore.totalWriteLatency.average",
        "datastore.numberReadAveraged.average",
        "datastore.numberWriteAveraged.average",
        "sys.uptime.latest"
      ]

      # Collect IP addresses? Valid values are "ipv4" and "ipv6"
      # ip_addresses = ["ipv6", "ipv4" ]

      cluster_metric_exclude = [ "*" ] ## Nothing excluded by default
      # datastore_metric_exclude = [ "*" ] ## Nothing excluded by default
      datacenter_metric_exclude = [ "*" ] ## Datacenters are not collected by default.

      ## number of objects to retreive per query for realtime resources (vms and hosts)
      ## set to 64 for vCenter 5.5 and 6.0 (default: 256)
      # max_query_objects = 256

      ## number of metrics to retreive per query for non-realtime resources (clusters and datastores)
      ## set to 64 for vCenter 5.5 and 6.0 (default: 256)
      # max_query_metrics = 256

      ## number of go routines to use for collection and discovery of objects and metrics
      # collect_concurrency = 1
      # discover_concurrency = 1

      ## the interval before (re)discovering objects subject to metrics collection (default: 300s)
      # object_discovery_interval = "300s"

      ## timeout applies to any of the api request made to vcenter
      # timeout = "60s"

      force_discover_on_init = true
      insecure_skip_verify = true

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: telegraf-deployment0001
spec:
  selector:
    matchLabels:
      app: telegraf
      instance: telegraf0001
  replicas: 1
  template:
    metadata:
      labels:
        app: telegraf
        instance: telegraf0001
    spec:
      containers:
      - name: telegraf
        image: telegraf
        ports:
          - containerPort: 9273
            name: http
        volumeMounts:
          - name: config
            mountPath: /etc/telegraf
      volumes:
        - name: config
          configMap:
            name: telegraf-config0001

---
apiVersion: v1
kind: Service
metadata:
  name: telegraf-svc0001
spec:
  selector:
    app: telegraf
    instance: telegraf0001
  type: NodePort
  ports:
    - port: 9273
      targetPort: 9273
      # nodePort: 39273
